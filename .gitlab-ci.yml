image: python

before_script:
  - curl -O https://bootstrap.pypa.io/get-pip.py
  - python get-pip.py
  - pip install -r requirements_dev.txt

after_script:
  - pip install codecov
  # - codecov --token=<>

stages:
  - quick-checks
  - build
  - test
  - deploy
  - cleanup

linters:
  image: python:3.5
  stage: quick-checks
  script:
    - make lint
    # - tox -e linters

build:
  stage: build
  script:
    - make install-dev
    - make dist
  artifacts:
    paths:
    - dist/
    expire_in: 1 month

python2:
  image: python:2.7
  stage: test
  script: tox -e py27

python36:
  image: python:3.6
  stage: test
  script: tox -e py36

python37:
  image: python:3.7
  stage: test
  script: tox -e py37

docs:
  stage: test
  script: make docs

deploy_pypi:
  stage: deploy
  script:
    script:   # Configure the PyPI credentials, then push the package, and cleanup the creds.
    - echo "[server-login]" >> ~/.pypirc
    - echo "username=" ${PYPI_USER} >> ~/.pypirc
    - echo "password=" ${PYPI_PASSWORD} >> ~/.pypirc
    - python setup.py check sdist bdist_wheel --universal
    - python setup.py upload   # This will fail if your creds are bad.
    - echo "" > ~/.pypirc && rm ~/.pypirc  # If the above fails, this won't run.
  only:
    - tags
  except:
    - branches


cleanup_pypirc:
   stage: cleanup
   when: always   # this is important; run even if preceding stages failed.
   script:
    - rm -vf ~/.pypirc  # we don't want to leave these around, but GitLab may clean up anyway.
